#include <iostream>
#include <vector>
using namespace std;

    int dfs(vector< vector<int> > a, vector<bool> used, vector<int> par, int i);

    int i = 0, f;


    int main() {
        int n, m;
        cin >> n >> f;
        vector<bool> used (n);
        vector<int> par (n);

        vector< vector<int> > a(n, vector<int>(n));


    for (int i = 0; i < n; ++i) {
        for (int v = 0; v < n; ++v) {
            cin >> a[i][v];
        }
    }

    cout << "   ";
    for (int i = 0; i < n; ++i) {
            cout << i << "  ";
    }
    cout << endl << endl;

    for (int i = 0; i < n; ++i) {
            cout << i << "  ";
        for (int v = 0; v < n; ++v) {
            cout << a[i][v] << "  ";
        }
        cout << endl << endl;
    }

    dfs(a, used, par, i);

    return 0;
    }



   int dfs(vector< vector<int> > a, vector<bool> used, vector<int> par, int i) {
        int n = 0;
       if (i != 0) {
            while (a[i][n] != 1) {
                   ++n;
            }
            par[i] = n;
     }
     if (i == f) {
                cout << i << " ";
            while (i != 0) {
                cout << par[i] << " ";
              i = par[i];
            }
        return 0;
     }
     n = 0;
     while ((a[i][n] != 1) || (used[n] == true)) {
            ++n;
     }
     used[i] = true;
     ++i;
     return dfs(a, used, par, i);
   }
