#include <iostream>
#include <vector>
#include <fstream>
#include <string>

using namespace std;

int prov();
void quickSort(int, int);

int nn;
int k = -1;
vector< vector<int> > vec;

int main()
{
    ifstream file("C:\\Users\\Пользователь\\Desktop\\test.txt");
    string str;
    file >> nn;
    vec.assign(3, vector<int>(nn));
    bool zn = false;

    for (int i = 0; i < nn; ++i) {
        file >> vec[0][i];
        file >> vec[1][i];
        //cout << "1 " << i << endl;
        vec[2][i] = 0;
    }

    quickSort(0, nn - 1);

    /*for (int i = 0; i < nn; ++i) {
        cout << vec[0][i] << " " << vec[1][i] << endl;
    }*/

    while (!zn) {
       zn = prov();
    }
    cout << k;
    return 0;
}


int prov()
{
    int i, v;
    ++k;
    //cout << "3 " << k << endl;
    for (i = 0; i < nn; ++i) {
        if (vec[2][i] == 0) {
            v = vec[1][i];
            vec[2][i] = 1;
            //cout << "I:" << i << " V:" << v << endl;
            break;
        }
        if (i == nn - 1)
            return true;
    }
    while (i < (nn - 1)) {
        //cout << vec[2][i + 1] << " " << vec[0][i + 1] << " ";
        if ((vec[2][i + 1] == 0) && (vec[0][i + 1] >= v)) {
                //cout << "I + 1: " << i + 1 << "; v:" << vec[1][i + 1] << endl;
            vec[2][i + 1] = 1;
            v = vec[1][i + 1];
        }
        ++i;
    }
    return false;
}


void quickSort(int left, int right) {
    int i = left, j = right;
    int tmp, tmp2;
    int pivot = vec[1][(left + right) / 2];

    while (i <= j) {
        while (vec[1][i] < pivot)
        i++;
        while (vec[1][j] > pivot)
        j--;
        if (i <= j) {
            tmp = vec[1][i];
            vec[1][i] = vec[1][j];
            vec[1][j] = tmp;

            tmp2 = vec[0][i];
            vec[0][i] = vec[0][j];
            vec[0][j] = tmp2;

            i++;
            j--;
        }
    };
    //cout << "2 " << left << " " << right << endl;
    if (left < j)
    quickSort(left, j);
    if (i < right)
    quickSort(i, right);

}


